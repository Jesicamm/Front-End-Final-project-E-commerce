{"ast":null,"code":"const checkError = data => {\n  for (let element in data) {\n    switch (element) {\n      case 'name':\n        if (!/^[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+(\\s*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]*)*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+$/.test(data[element])) {\n          return \" nombre solo puede contener letras \";\n        }\n\n        break;\n\n      case 'surname':\n        if (!/^[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+(\\s*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]*)*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+$/.test(data[element])) {\n          return \" Apellidos solo pueden contener letras  \";\n        }\n\n        break;\n\n      case 'email':\n        if (!/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/.test(data[element])) {\n          return 'Por favor escriba un email válido.';\n        }\n\n        break;\n\n      case 'password':\n        if (data[element] === '') {\n          return 'Por favor escriba su contraseña.';\n        }\n\n        if (!/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/.test(data[element])) {\n          return 'Contraseña no valida ,min 8 caraterers 1 letra y 1 caracter especial, ';\n        }\n\n        break;\n\n      case 'phone':\n        if (!/^(\\+34|0034|34)?[ -]*(6|7)[ -]*([0-9][ -]*){8}.text(data[element])/) {\n          return \"El telefono introducido solo puede contener números\";\n        }\n\n        break;\n\n      case 'address':\n        if (!/^[#.0-9a-zA-Z\\s,-\\\\ñÑ]+$/.test(data[element])) {\n          return 'Dirección solo permite estos caracteres especiales \"-\" ; \".\" ;\",\" ';\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n};\n\nexport default checkError;","map":{"version":3,"sources":["/home/jessica/PROYECTOS GEEKSHUBS/PROYECTOS/proyecto final front/Front-End-Final-project-E-commerce/finalproject/src/My-tools/My-tools.jsx"],"names":["checkError","data","element","test"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,IAAD,IAAU;AAEzB,OAAK,IAAIC,OAAT,IAAoBD,IAApB,EAA0B;AAEtB,YAAQC,OAAR;AAEI,WAAK,MAAL;AAEI,YAAI,CAAE,mFAAmFC,IAAnF,CAAwFF,IAAI,CAACC,OAAD,CAA5F,CAAN,EAA8G;AAE1G,iBAAO,qCAAP;AACH;;AACD;;AAEJ,WAAK,SAAL;AACI,YAAI,CAAE,mFAAmFC,IAAnF,CAAwFF,IAAI,CAACC,OAAD,CAA5F,CAAN,EAA8G;AAE1G,iBAAO,0CAAP;AAEH;;AAEL;;AAEA,WAAK,OAAL;AACI,YAAI,CAAE,iSAAiSC,IAAjS,CAAsSF,IAAI,CAACC,OAAD,CAA1S,CAAN,EAA4T;AAExT,iBAAO,oCAAP;AACH;;AACL;;AAEA,WAAK,UAAL;AACI,YAAID,IAAI,CAACC,OAAD,CAAJ,KAAkB,EAAtB,EAA0B;AACtB,iBAAO,kCAAP;AACH;;AACD,YAAG,CAAC,iEAAiEC,IAAjE,CAAsEF,IAAI,CAACC,OAAD,CAA1E,CAAJ,EAAyF;AACrF,iBAAO,wEAAP;AACH;;AACL;;AAEA,WAAK,OAAL;AAEI,YAAG,CAAE,oEAAL,EAA0E;AAEtE,iBAAO,qDAAP;AACH;;AACL;;AAEA,WAAK,SAAL;AACI,YAAI,CAAE,2BAA2BC,IAA3B,CAAgCF,IAAI,CAACC,OAAD,CAApC,CAAN,EAAsD;AAClD,iBAAO,oEAAP;AACH;;AACL;;AAEA;AAEA;AAnDJ;AAqDH;AACJ,CA1DD;;AA4DA,eAAeF,UAAf","sourcesContent":["const checkError = (data) => {\n\n    for (let element in data) {\n\n        switch (element) {\n\n            case 'name':\n                \n                if (! /^[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+(\\s*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]*)*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+$/.test(data[element])) {\n\n                    return \" nombre solo puede contener letras \";\n                }\n                break;\n\n            case 'surname':\n                if (! /^[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+(\\s*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]*)*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+$/.test(data[element])) {\n\n                    return \" Apellidos solo pueden contener letras  \";\n\n                }\n\n            break;\n\n            case 'email':\n                if (! /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/.test(data[element])) {\n\n                    return 'Por favor escriba un email válido.'\n                } \n            break;\n\n            case 'password':\n                if (data[element] === '') {\n                    return 'Por favor escriba su contraseña.';\n                }\n                if(!/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/.test(data[element])){\n                    return 'Contraseña no valida ,min 8 caraterers 1 letra y 1 caracter especial, '\n                }\n            break;\n\n            case 'phone' : \n                \n                if(! /^(\\+34|0034|34)?[ -]*(6|7)[ -]*([0-9][ -]*){8}.text(data[element])/){\n\n                    return \"El telefono introducido solo puede contener números\";\n                }\n            break;\n\n            case 'address':\n                if (! /^[#.0-9a-zA-Z\\s,-\\\\ñÑ]+$/.test(data[element])) {\n                    return 'Dirección solo permite estos caracteres especiales \"-\" ; \".\" ;\",\" '\n                } \n            break;\n\n            default:\n            \n            break;\n        }\n    }\n};\n\nexport default checkError;\n\n"]},"metadata":{},"sourceType":"module"}