{"ast":null,"code":"var _jsxFileName = \"/home/jessica/PROYECTOS GEEKSHUBS/PROYECTOS/proyecto final front/Front-End-Final-project-E-commerce/finalproject/src/components/UpdateUser/UpdateUser.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Modal, TextField, Button } from 'm@terial-ui/core';\nimport { makeStyles } from 'm@terial-ui/core/styles';\nimport { UPDATE_USER } from '../../redux/types/userTypes';\nimport './UpdateUser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: 'white',\n    border: '2px solid',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  textfield: {\n    width: '100%'\n  }\n}));\n\nconst UpdateUser = props => {\n  _s();\n\n  const [userUpdate, setUser] = useState(props.user);\n\n  const handleStateUpdate = event => {\n    setUser({ ...userUpdate,\n      [event.target.name]: event.target.type === \"number\" ? +event.target.value : event.target.value\n    });\n  };\n\n  const styles = useStyles();\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modal,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ACTUALIZAR MIS DATOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"nombre\",\n      className: styles.textfield\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"apellidos\",\n      className: styles.textfield\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"nombre\",\n      className: styles.textfield\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this); // FUNCTIONS\n\n\n  const submitUpdate = async () => {\n    let response = await axios.put(`http://localhost:3002/users/${props.user._id}`, userUpdate);\n\n    if (response) {\n      let userUpdated = props.dispatch({\n        type: UPDATE_USER,\n        payload: userUpdate\n      });\n      console.log('userUpdated', userUpdated);\n      alert('Datos actualizados con Exito');\n    } else {\n      alert('Lo siento , no se pudo actualizar el registro, vuelve a intentarlo mas tarde');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-content\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateUser, \"d9nFo/pDQ/z4oEmM8IqB4YBVkEY=\", false, function () {\n  return [useStyles];\n});\n\n_c = UpdateUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(UpdateUser);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["/home/jessica/PROYECTOS GEEKSHUBS/PROYECTOS/proyecto final front/Front-End-Final-project-E-commerce/finalproject/src/components/UpdateUser/UpdateUser.jsx"],"names":["React","useState","axios","connect","Modal","TextField","Button","makeStyles","UPDATE_USER","useStyles","theme","modal","position","width","backgroundColor","border","boxShadow","shadows","padding","spacing","top","left","transform","textfield","UpdateUser","props","userUpdate","setUser","user","handleStateUpdate","event","target","name","type","value","styles","body","submitUpdate","response","put","_id","userUpdated","dispatch","payload","console","log","alert","mapStateToProps","state","token"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport {Modal, TextField, Button} from 'm@terial-ui/core'\nimport {makeStyles} from 'm@terial-ui/core/styles'\nimport {UPDATE_USER} from '../../redux/types/userTypes';\nimport './UpdateUser.css';\n\n const useStyles=makeStyles((theme) =>({\n     modal:{\n         position:'absolute',\n         width: 400,\n         backgroundColor: 'white',\n         border: '2px solid',\n         boxShadow:theme.shadows[5],\n         padding: theme.spacing(2,4,3),\n         top: '50%',\n         left: '50%',\n         transform: 'translate(-50%, -50%)'\n     },\n     textfield:{\n         width:'100%'\n     }\n }))\n\nconst UpdateUser = (props) =>{\n \n    const [userUpdate, setUser] = useState(props.user);\n\n    const handleStateUpdate = (event) => {\n        setUser({...userUpdate, [event.target.name]: event.target.type === \"number\" ? +event.target.value : event.target.value});\n    };\n    \n    const styles = useStyles();\n\n    const body =(\n        <div className={styles.modal}>\n        <div align=\"center\">\n            <h2>ACTUALIZAR MIS DATOS</h2>\n        </div>\n\n        <TextField label=\"nombre\" className={styles.textfield}/>\n        <TextField label=\"apellidos\" className={styles.textfield}/>\n        <TextField label=\"nombre\" className={styles.textfield}/>\n        </div>\n    )\n\n    // FUNCTIONS\n\n   const submitUpdate = async () => {\n\n        \n        let response = await axios.put(`http://localhost:3002/users/${props.user._id}`, userUpdate);\n        \n        if (response) {\n            let userUpdated = props.dispatch({type: UPDATE_USER, payload: userUpdate});\n            console.log('userUpdated', userUpdated)\n            alert('Datos actualizados con Exito');\n        } else {\n            alert('Lo siento , no se pudo actualizar el registro, vuelve a intentarlo mas tarde');\n        }\n\n\n    }\n\n \n    return (\n        <div className=\"update-content\">\n            \n             \n     {/*         <div className=\"header\">\n                <h2>Actualizar mis Datos</h2>\n            </div>\n            <div className=\"spacer\"></div>\n            <div className=\"form-modal\">\n                <div className='update-data'>\n                    <p>Nombre</p>\n                    <input type='text'className='update-input' name='name' title='Full Name' lenght='30' onChange={handleStateUpdate}></input> \n                </div>\n\n                <div className='update-data'>\n                    <p>Apellidos</p>\n                    <input type='text' name='surname'className='update-input' title='Surname' lenght='30' onChange={handleStateUpdate}></input> \n                </div>\n\n                <div className='update-data'>\n                    <p>Email</p>\n                    <input type='email' name='email' className='update-input'title='Email' lenght='30' onChange={handleStateUpdate}></input> \n                </div>\n\n                <div className='update-data'>\n                    <p>Tel√©fono de Contacto</p>\n                    <input type='number' name='phone'className='update-input' title='Phone Number' lenght='12' onChange={handleStateUpdate}></input> \n                </div>\n\n                <div className='update-data'>\n                    <p>Fecha de Nacimiento</p>\n                    <input type='date' name='birthday' className='update-input'title='Date of Birth' lenght='30' onChange={handleStateUpdate}></input>\n                </div>\n\n                <div className='update-data'>\n                    <p>Direcci√≥n</p>\n                    <input type='text' name='address' className='update-input'title='Full Address' lenght='250' onChange={handleStateUpdate}></input>\n                </div>\n                <div className='update-data'>\n                    <p>Pa√≠s</p>\n                    <input type='text' name='country'className='update-input' title='Country' lenght='250' onChange={handleStateUpdate}></input> \n                </div>\n\n                <div className='update-data'>\n                    <p>Ciudad</p>\n                    <input type='text' name='city'className='update-input' title='City' lenght='250' onChange={handleStateUpdate}></input>\n                </div>\n\n                <div className='update-data'>\n                    <p>C√≥digo postal</p>\n                    <input type='text' name='postal' className='update-input'title='Postal' lenght='250' onChange={handleStateUpdate}></input>\n                </div>\n            </div>\n            <div className=\"submitUpdate\">\n                <button type='submit' name='submit' onClick={submitUpdate} title='Update Profile'></button>\n            </div>   */}\n        </div>\n    )\n}\nconst mapStateToProps =state =>{\n    return{\n      user : state.user,\n      token : state.token\n    }\n  };\n  \nexport default connect(mapStateToProps)(UpdateUser);\n"]},"metadata":{},"sourceType":"module"}