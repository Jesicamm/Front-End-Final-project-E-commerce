{"ast":null,"code":"var _jsxFileName = \"/home/jessica/PROYECTOS GEEKSHUBS/PROYECTOS/proyecto final front/Front-End-Final-project-E-commerce/finalproject/src/components/UpdateUser/UpdateUser.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { UPDATE_USER } from '../../redux/types/userTypes';\nimport checkError from '../../My-tools/My-tools';\nimport './UpdateUser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateUser(props) {\n  _s();\n\n  const [userUpdate, setUser] = useState({\n    name: '',\n    surname: '',\n    email: '',\n    phone: '',\n    birthDate: '',\n    address: '',\n    country: '',\n    city: '',\n    postal: ''\n  });\n  const [message, setMessage] = useState('');\n\n  const handleStateUpdate = event => {\n    setUser({ ...userUpdate,\n      [event.target.name]: event.target.type === \"number\" ? +event.target.value : event.target.value\n    });\n  }; //---AUTH-----------\n\n  /* let token = props.token\n  let auth = {\n      headers: {\n        'Authorization': `Bearer ${token}` \n      }}; */\n  // FUNCTIONS\n\n\n  const submitUpdate = async () => {\n    //Error handling\n    setMessage('');\n    let error = checkError(userUpdate);\n    setMessage(error);\n\n    if (error) {\n      return;\n    }\n\n    let body = {\n      name: userUpdate.name,\n      surname: userUpdate.surname,\n      email: userUpdate.email,\n      phone: userUpdate.phone,\n      birthDate: userUpdate.birthDate,\n      address: userUpdate.address,\n      country: userUpdate.country,\n      city: userUpdate.city,\n      postal: userUpdate.postal\n    };\n    let response = await axios.put(`http://localhost:3002/users/${userUpdate._id}`, body);\n\n    if (response) {\n      let userUpdated = props.dispatch({\n        type: UPDATE_USER,\n        payload: response.data\n      });\n      console.log('userUpdated', userUpdate);\n      alert('Datos actualizados con Exito');\n    } else {\n      alert('Lo siento , no se pudo actualizar el registro, vuelve a intentarlo mas tarde');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"udpateUserComponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lineForm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fullName\",\n        title: \"Full Name\",\n        lenght: \"30\",\n        onChange: handleStateUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userName\",\n        title: \"User Name\",\n        lenght: \"30\",\n        onChange: handleStateUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        title: \"Email\",\n        lenght: \"30\",\n        onChange: handleStateUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"phoneNumber\",\n        title: \"Phone Number\",\n        lenght: \"12\",\n        onChange: handleStateUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"birthDate\",\n        title: \"Date of Birth\",\n        lenght: \"30\",\n        onChange: handleStateUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        title: \"Full Address\",\n        lenght: \"250\",\n        onChange: handleStateUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageUpdate\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submitUpdate\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"submit\",\n        onClick: () => submitUpdate(),\n        title: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateUser, \"Ox5nPuI0u9zS41Dc+dPRHex0qxs=\");\n\n_c = UpdateUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(UpdateUser);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["/home/jessica/PROYECTOS GEEKSHUBS/PROYECTOS/proyecto final front/Front-End-Final-project-E-commerce/finalproject/src/components/UpdateUser/UpdateUser.jsx"],"names":["React","useState","axios","connect","UPDATE_USER","checkError","UpdateUser","props","userUpdate","setUser","name","surname","email","phone","birthDate","address","country","city","postal","message","setMessage","handleStateUpdate","event","target","type","value","submitUpdate","error","body","response","put","_id","userUpdated","dispatch","payload","data","console","log","alert","mapStateToProps","state","user","token"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport {UPDATE_USER} from '../../redux/types/userTypes';\nimport checkError from '../../My-tools/My-tools';\nimport './UpdateUser.css';\n\nfunction UpdateUser(props) {\n\n    const [userUpdate, setUser] = useState({\n        name: '',\n        surname: '',\n        email: '',\n        phone: '',\n        birthDate: '',\n        address: '',\n        country: '',\n        city: '',\n        postal: ''\n    })\n\n    const [message, setMessage] = useState('')\n\n    const handleStateUpdate = (event) => {\n        setUser({...userUpdate, [event.target.name]: event.target.type === \"number\" ? +event.target.value : event.target.value});\n    };\n\n    //---AUTH-----------\n\n    /* let token = props.token\n    let auth = {\n        headers: {\n          'Authorization': `Bearer ${token}` \n        }}; */\n\n    // FUNCTIONS\n\n    const submitUpdate = async () => {\n\n        //Error handling\n        setMessage('');\n\n        let error = checkError(userUpdate)\n        setMessage(error);\n\n        if(error){\n            return;\n        }\n\n       \n        let body = {\n\n            name: userUpdate.name,\n            surname: userUpdate.surname,\n            email: userUpdate.email,\n            phone: userUpdate.phone,\n            birthDate: userUpdate.birthDate,\n            address: userUpdate.address,\n            country: userUpdate.country,\n            city: userUpdate.city,\n            postal: userUpdate.postal\n\n        }\n        \n        let response = await axios.put(`http://localhost:3002/users/${userUpdate._id}`, body);\n        \n        if (response) {\n            let userUpdated = props.dispatch({type: UPDATE_USER, payload: response.data});\n            console.log('userUpdated', userUpdate)\n            alert('Datos actualizados con Exito');\n        } else {\n            alert('Lo siento , no se pudo actualizar el registro, vuelve a intentarlo mas tarde');\n        }\n\n\n    }\n\n    return (\n        <div className=\"udpateUserComponent\">\n            <div className=\"header\">\n                <h2>Update profile</h2>\n            </div>\n            <div className=\"lineForm\"></div>\n            <div className=\"formModal\">\n                <input type='text' name='fullName' title='Full Name' lenght='30' onChange={handleStateUpdate}></input> \n                <input type='text' name='userName' title='User Name' lenght='30' onChange={handleStateUpdate}></input> \n                <input type='email' name='email' title='Email' lenght='30' onChange={handleStateUpdate}></input> \n                <input type='number' name='phoneNumber' title='Phone Number' lenght='12' onChange={handleStateUpdate}></input> \n                <input type='date' name='birthDate' title='Date of Birth' lenght='30' onChange={handleStateUpdate}></input> \n                <input type='text' name='address' title='Full Address' lenght='250' onChange={handleStateUpdate}></input> \n            </div>\n            <div className=\"messageUpdate\">{message}</div>\n            <div className=\"submitUpdate\">\n                <button type='submit' name='submit' onClick={()=>submitUpdate()} title='Update Profile'></button>\n            </div>\n        </div>\n    )\n}\nconst mapStateToProps =state =>{\n    return{\n      user : state.user,\n      token : state.token\n    }\n  };\n  \nexport default connect(mapStateToProps)(UpdateUser);\n"]},"metadata":{},"sourceType":"module"}